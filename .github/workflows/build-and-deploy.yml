name: Build & Deploy Workflow

on:
  push:
    branches:
      - master
      - dev

jobs:
  build_and_deploy:
    name: 🔧 Build & 🚀 Deploy
    runs-on: ubuntu-latest # Ubuntu is faster than macOS

    steps:
      - name: Running Version 1.1 of Build and Deploy Workflow
        run: |
          echo "Running Version 1.1 of Build and Deploy Workflow"
          echo "Running on ${{ runner.os }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"

      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1 # Shallow clone for speed

      - name: 📝 Get Last Commit Message
        id: last_commit
        run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Set Target Branch
        id: set_target_branch
        run: |
          current_branch="${GITHUB_REF##*/}"
          echo "Current branch: $current_branch"
          if [ "$current_branch" == "master" ]; then
            echo "TARGET_BRANCH=master-build" >> $GITHUB_ENV
          elif [ "$current_branch" == "dev" ]; then
            echo "TARGET_BRANCH=dev-build" >> $GITHUB_ENV
          else
            echo "Error: Push from unrecognized branch: $current_branch. Exiting."
            exit 1
          fi

      #####################################
      # ⚙️ Setup PHP & Node concurrently
      #####################################
      
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2
          coverage: none

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      #####################################
      # ♻️ Restore & Install Dependencies
      #####################################

      - name: ♻️ Get Composer Cache Directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: ♻️ Cache Composer dependencies
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: 📥 Install Dependencies (Parallel)
        run: |
          # Install dependencies in parallel
          composer install --prefer-dist --no-progress --no-interaction &
          npm ci &
          wait

      #####################################
      # 🛠️ Build + Lint
      #####################################

      - name: 🛠️ Build Assets
        run: npm run build

      - name: 🧹 Auto-fix PHP Code Style
        continue-on-error: true
        run: |
          ./vendor/bin/phpcbf . -d memory_limit=1024M

      #####################################
      # 🧼 Cleanup
      #####################################

      - name: 🧼 Cleanup Unnecessary Files
        run: |
          echo "🧹 Cleaning up unnecessary build files..."
          rm -rf ./plugins/wisesync/blocks/src
          rm -rf ./themes/papersync/blocks/src

      #####################################
      # 🚀 Deploy
      #####################################

      - name: 🚀 Deploy to Target Build Branch
        run: |
          echo "🚚 Preparing deployment to $TARGET_BRANCH branch..."
          git config --global user.name "Shubham Kumar Bansal"
          git config --global user.email "shub@shubkb.com"
          
          # Use sparse checkout for faster clone of target branch
          mkdir -p deploy
          cd deploy
          git init
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git config core.sparsecheckout true
          git pull origin $TARGET_BRANCH
          
          # Update build files
          cd ..
          rm -rf deploy/plugins deploy/themes
          cp -r plugins deploy/
          cp -r themes deploy/
          
          # Commit and push changes
          cd deploy
          git add .
          git commit -m "Deploy build: $(date +'%Y-%m-%d %H:%M:%S') - ${{ steps.last_commit.outputs.message }}" || echo "✅ No changes to commit"
          git push origin HEAD:$TARGET_BRANCH
