name: Example Parallel Workflow

on:
  push:
    branches:
      - master

jobs:
  # This workflow has three jobs:
  # 1. Setup PHP → Composer install → WP-CLI install
  # 2. Setup Node → npm install
  # 3. Build job depends on both the php_setup and node_setup jobs
  php_setup:
    runs-on: macos-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Setup PHP
        run: |
          echo "Setting up PHP..."
          # Example installation steps for PHP:
          # For macOS:
          brew install php

      - name: WP-CLI Install
        run: |
          echo "PHP Version:"
          php -v
          echo "Installing WP-CLI..."
          # Example installation steps for WP-CLI:
          # For macOS:
          # brew install wp-cli
          echo "WP-CLI installed successfully (placeholder)."

      - name: Composer Install
        run: |
          echo "Installing Composer dependencies..."
          composer install --prefer-dist --no-progress --no-suggest

  # 2. Setup Node → npm install
  node_setup:
    runs-on: macos-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: npm Install
        run: |
          echo "Node Version:"
          node -v
          echo "NPM Version:"
          npm -v
          echo "Installing NPM dependencies..."
          npm install

  # 3. Build job depends on both the php_setup and node_setup jobs
  build:
    needs: [php_setup, node_setup]
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Final Build Step
        run: |
          echo "Starting final build..."
          # If the build requires PHP or Node, you'll want to set them up again 
          # because each job runs on a fresh runner environment. 
          # But for simplicity, we assume you only need the existing code to run 'npm run build'.
          
          echo "Running npm run build..."
          npm install  # If needed again for the final runner
          npm run build
          
          echo "Build completed successfully!"
