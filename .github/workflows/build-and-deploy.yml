name: Example Parallel Workflow

on:
  push:
    branches:
      - master

jobs:
  # 1. Setup PHP → Composer install → WP-CLI install
  php_setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Composer Install
        run: |
          echo "Installing Composer dependencies..."
          composer install --prefer-dist --no-progress --no-suggest

      - name: WP-CLI Install
        run: |
          echo "Installing WP-CLI..."
          # Example installation steps for WP-CLI:
          # For Ubuntu:
          # sudo apt-get update
          # sudo apt-get install -y php-cli
          # curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          # chmod +x wp-cli.phar
          # sudo mv wp-cli.phar /usr/local/bin/wp
          echo "WP-CLI installed successfully (placeholder)."

  # 2. Setup Node → npm install
  node_setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: npm Install
        run: |
          echo "Installing NPM dependencies..."
          npm install

  # 3. Build job depends on both the php_setup and node_setup jobs
  build:
    needs: [php_setup, node_setup]
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3

      - name: Final Build Step
        run: |
          echo "Starting final build..."
          # If the build requires PHP or Node, you'll want to set them up again 
          # because each job runs on a fresh runner environment. 
          # But for simplicity, we assume you only need the existing code to run 'npm run build'.
          
          echo "Running npm run build..."
          npm install  # If needed again for the final runner
          npm run build
          
          echo "Build completed successfully!"
