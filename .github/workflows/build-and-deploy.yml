name: Build & Deploy Workflow

on:
  push:
    branches:
      - master
      - dev

jobs:
  build_and_deploy:
    name: üîß Build & üöÄ Deploy
    runs-on: ubuntu-latest # Ubuntu is faster than macOS

    steps:
      - name: Running Version 1.1 of Build and Deploy Workflow
        run: |
          echo "Running Version 1.0 of Build and Deploy Workflow"
          echo "Running on ${{ runner.os }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"

      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1 # Shallow clone for speed

      - name: üìù Get Last Commit Message
        id: last_commit
        run: |
          sanitized_message=$(git log -1 --pretty=%B | tr '\n' ' ' | tr -d '\r')
          echo "message=$sanitized_message" >> $GITHUB_OUTPUT

      - name: Set Target Branch
        id: set_target_branch
        run: |
          current_branch="${GITHUB_REF##*/}"
          echo "Current branch: $current_branch"
          if [ "$current_branch" == "master" ]; then
            echo "TARGET_BRANCH=master-build" >> $GITHUB_ENV
          elif [ "$current_branch" == "dev" ]; then
            echo "TARGET_BRANCH=dev-build" >> $GITHUB_ENV
          else
            echo "Error: Push from unrecognized branch: $current_branch. Exiting."
            exit 1
          fi

      #####################################
      # ‚öôÔ∏è Setup PHP & Node
      #####################################
      
      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2
          coverage: none

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      #####################################
      # ‚ôªÔ∏è Restore Caches
      #####################################

      - name: ‚ôªÔ∏è Get Composer Cache Directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: ‚ôªÔ∏è Cache Composer dependencies
        uses: actions/cache@v3
        id: composer-cache
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: ‚ôªÔ∏è Cache NPM + node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-${{ runner.os }}-${{ github.ref_name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ github.ref_name }}-

      #####################################
      # üì• Install Dependencies
      #####################################

      - name: üì• Install Dependencies (Parallel)
        run: |
          # Install dependencies in parallel
          composer install --prefer-dist --no-progress --no-interaction &
          if [ -f package-lock.json ]; then
            npm ci &
          else
            npm install &
          fi
          wait

      #####################################
      # üõ†Ô∏è Build + Lint
      #####################################

      - name: üõ†Ô∏è Build Assets
        run: npm run build

      - name: üõ†Ô∏è Lint Fix Assets
        run: npm run lint:fix

      - name: üßπ Auto-fix PHP Code Style
        run: |
          echo "üßπ Running PHPCBF to auto-fix code style..."
          set +e
          ./vendor/bin/phpcbf . -d memory_limit=1024M
          phpcbf_status=$?
          set -e
          
          # PHPCBF exit codes:
          # 0: No fixable errors detected
          # 1: Fixable errors were fixed
          # 2: Some errors could not be fixed
          # 3: Configuration error
          if [ $phpcbf_status -eq 0 ]; then
            echo "‚úÖ No fixable errors detected"
          elif [ $phpcbf_status -eq 1 ]; then
            echo "‚úÖ Fixed all fixable errors"
          elif [ $phpcbf_status -eq 2 ]; then
            echo "‚ö†Ô∏è Some errors could not be fixed but continuing workflow"
          else
            echo "‚ùå PHPCBF configuration error"
            exit $phpcbf_status
          fi

      #####################################
      # üßº Cleanup
      #####################################

      - name: üßº Cleanup Unnecessary Files
        run: |
          echo "üßπ Cleaning up unnecessary build files..."
          rm -rf ./plugins/wisesync/blocks/src
          rm -rf ./themes/papersync/blocks/src

      #####################################
      # üöÄ Deploy
      #####################################

      - name: üöÄ Deploy to Target Build Branch
        run: |
          echo "üöö Preparing deployment to $TARGET_BRANCH branch..."
          git config --global user.name "Shubham Kumar Bansal"
          git config --global user.email "shub@shubkb.com"
          
          # Use sparse checkout for faster clone of target branch
          mkdir -p deploy
          cd deploy
          git init
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git config core.sparsecheckout true
          git pull origin $TARGET_BRANCH
          
          # Update build files
          cd .. 
          rm -rf deploy/plugins deploy/themes
          cp -r plugins deploy/
          cp -r themes deploy/
          
          # Commit and push changes
          cd deploy
          git add .
          git commit -m "Deploy build: $(date +'%Y-%m-%d %H:%M:%S') - ${{ steps.last_commit.outputs.message }}" || echo "‚úÖ No changes to commit"
          git push origin HEAD:$TARGET_BRANCH
