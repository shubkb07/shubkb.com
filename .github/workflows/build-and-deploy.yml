name: Build & Deploy Workflow (Optimized No-Homebrew)

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    name: 🔧 Build & 🚀 Deploy on Push to Master
    runs-on: macos-latest

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v3

      - name: 📝 Get Last Commit Message
        id: last_commit
        run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      #####################################
      # ♻️ Restore Caches (npm + composer)
      #####################################

      - name: ♻️ Restore NPM + node_modules Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: ♻️ Restore Composer vendor Cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      #####################################
      # ⚙️ Environment Setup
      #####################################

      - name: ⚙️ Install PHP & Composer via Homebrew
        run: |
          echo "🔧 Installing PHP..."
          brew install php || echo "✅ PHP already installed"

          echo "📦 Installing Composer..."
          brew install composer || echo "✅ Composer already installed"

      #####################################
      # 📥 Install Dependencies
      #####################################

      - name: 📥 Install Project Dependencies
        run: |
          echo "📦 Installing Composer dependencies..."
          composer install --prefer-dist --no-progress --no-suggest

          echo "📦 Installing NPM dependencies..."
          if [ -f package-lock.json ]; then
            npm ci
          else
            echo "⚠️ package-lock.json not found, using npm install instead"
            npm install
          fi

      #####################################
      # 🛠️ Build + Lint
      #####################################

      - name: 🛠️ Build Assets & Lint PHP
        run: |
          echo "🏗️ Running npm build script..."
          npm run build || exit 1

          echo "🧹 Running PHPCBF to auto-fix code style..."
          set +e
          ./vendor/bin/phpcbf . -d memory_limit=1024M
          result=$?
          if [ $result -ne 0 ]; then
            echo "ℹ️ PHPCBF fixed some issues. Continuing..."
          fi
          set -e

      #####################################
      # 💾 Save Caches AFTER install
      #####################################

      - name: 💾 Save Composer vendor Cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      - name: 💾 Save node_modules + .npm Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      #####################################
      # 🧼 Cleanup
      #####################################

      - name: 🧼 Cleanup Unnecessary Files
        run: |
          echo "🧹 Cleaning up unnecessary build files..."
          rm -rf ./plugins/wisesync/blocks/src
          rm -rf ./themes/papersync/blocks/src

      #####################################
      # 🚀 Deploy
      #####################################

      - name: 🚀 Deploy to `master-build` Branch
        run: |
          echo "🚚 Preparing deployment to master-build branch..."

          git clone --single-branch --branch master-build https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git deploy

          echo "📁 Updating build files in deploy directory..."
          rm -rf deploy/plugins
          rm -rf deploy/themes
          cp -r plugins deploy/
          cp -r themes deploy/

          cd deploy
          git config user.name "Shubham Kumar Bansal"
          git config user.email "shub@shubkb.com"

          echo "📝 Committing build changes..."
          git add .
          git commit -m "Deploy build: $(date +'%Y-%m-%d %H:%M:%S') - ${{ steps.last_commit.outputs.message }}" || echo "✅ No changes to commit"

          echo "🚀 Pushing to master-build branch..."
          git push origin master-build
