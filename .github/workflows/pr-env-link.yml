name: PR Environment Link

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr_environment_link:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to determine branch info

      - name: Get PR push count
        id: pr_count
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          # Check if gh CLI is available
          if ! command -v gh &> /dev/null; then
            echo "GitHub CLI not found, using curl instead"
            PUSH_COUNT=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/commits" | jq 'length')
          else
            PUSH_COUNT=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER/commits --jq 'length')
          fi
          echo "push_count=$PUSH_COUNT" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete previous bot comments after 5 pushes
        if: steps.pr_count.outputs.push_count != ''
        run: |
          PUSH_COUNT="${{ steps.pr_count.outputs.push_count }}"
          
          # Check if this is a 5th push using bash arithmetic
          if (( PUSH_COUNT % 5 != 0 )); then
            echo "Not a 5th push (got $PUSH_COUNT), skipping comment cleanup"
            exit 0
          fi
          
          PR_NUMBER=${{ github.event.pull_request.number }}
          BOT_LOGIN="github-actions[bot]"
          
          # Check if gh CLI is available
          if ! command -v gh &> /dev/null; then
            echo "GitHub CLI not found, using curl instead"
            # Get comment IDs with curl (simplified example)
            COMMENTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" | \
              jq '.[] | select(.user.login == "github-actions[bot]") | .id')
            
            # Delete each comment with curl
            for COMMENT_ID in $COMMENTS; do
              curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID"
            done
          else
            # Get all comments by the bot on this PR
            COMMENTS=$(gh api repos/${{ github.repository }}/issues/$PR_NUMBER/comments --jq '.[] | select(.user.login == "github-actions[bot]") | .id')
            
            # Delete each comment
            for COMMENT_ID in $COMMENTS; do
              gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID -X DELETE
            done
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine PR base branch and set environment URL
        id: set_env_url
        run: |
          HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"
          
          if [[ "$HEAD_BRANCH" == "master" ]]; then
            echo "env_url=https://shubkb.com" >> $GITHUB_OUTPUT
          elif [[ "$HEAD_BRANCH" == "dev" ]]; then
            echo "env_url=https://dev.shubkb.com" >> $GITHUB_OUTPUT
          else
            echo "env_url=https://develop.shubkb.com" >> $GITHUB_OUTPUT
          fi

      - name: Create environment link comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Preview Environment
            
            Check your changes here:
            ðŸ‘‰ [${{ github.event.pull_request.title }}](${{ steps.set_env_url.outputs.env_url }})
            
            _This comment was automatically generated by the GitHub Actions workflow._