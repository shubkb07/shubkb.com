name: PR Environment Link

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr_environment_link:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to determine branch info

      - name: Get PR push count
        id: pr_count
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          # Check if gh CLI is available
          if ! command -v gh &> /dev/null; then
            echo "GitHub CLI not found, using curl instead"
            PUSH_COUNT=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/commits" | jq 'length')
          else
            PUSH_COUNT=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER/commits --jq 'length')
          fi
          echo "push_count=$PUSH_COUNT" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete all previous environment comments
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BOT_LOGIN="github-actions[bot]"
          
          # Check if gh CLI is available
          if ! command -v gh &> /dev/null; then
            echo "GitHub CLI not found, using curl instead"
            # Get all comments by the bot on this PR
            curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" > /tmp/comments.json
            
            # Filter comments that contain "ðŸš€ Preview Environment" in the body
            COMMENT_IDS=$(jq -r '.[] | select(.user.login == "github-actions[bot]" and (.body | contains("ðŸš€ Preview Environment"))) | .id' /tmp/comments.json)
            
            # Delete each matching comment
            for COMMENT_ID in $COMMENT_IDS; do
              echo "Deleting comment ID: $COMMENT_ID"
              curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID"
            done
          else
            # Get all comments by the bot on this PR that contain "ðŸš€ Preview Environment"
            gh api repos/${{ github.repository }}/issues/$PR_NUMBER/comments --paginate \
              --jq '.[] | select(.user.login == "github-actions[bot]" and (.body | contains("ðŸš€ Preview Environment"))) | .id' > /tmp/comment_ids.txt
            
            # Delete each matching comment
            while IFS= read -r COMMENT_ID; do
              if [ ! -z "$COMMENT_ID" ]; then
                echo "Deleting comment ID: $COMMENT_ID"
                gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID -X DELETE
              fi
            done < /tmp/comment_ids.txt
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine PR base branch and set environment URL
        id: set_env_url
        run: |
          SOURCE_BRANCH="${{ github.event.pull_request.head.ref }}"
          if [[ "$SOURCE_BRANCH" == "master" ]]; then
            echo "env_url=https://shubkb.com" >> $GITHUB_OUTPUT
            echo "env_name=production" >> $GITHUB_OUTPUT
          elif [[ "$SOURCE_BRANCH" == "dev" ]]; then
            echo "env_url=https://dev.shubkb.com" >> $GITHUB_OUTPUT
            echo "env_name=staging" >> $GITHUB_OUTPUT
          else
            echo "env_url=https://develop.shubkb.com" >> $GITHUB_OUTPUT
            echo "env_name=development" >> $GITHUB_OUTPUT
          fi

      - name: Create environment link comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ðŸš€ Preview Environment

            **PR:** [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})  
            **PR Number:** #${{ github.event.pull_request.number }}

            **Branches**
            - **Base:** `${{ github.event.pull_request.base.ref }}`
            - **Source:** `${{ github.event.pull_request.head.ref }}`

            **Commits**
            - **Count:** `${{ steps.pr_count.outputs.push_count }}`
            - [View Commits](${{ github.event.pull_request._links.commits.href }})

            **Environment**
            - **Name:** `${{ steps.set_env_url.outputs.env_name }}`
            - **Deploy URL:** [${{ steps.set_env_url.outputs.env_url }}](${{ steps.set_env_url.outputs.env_url }})

            > _This comment was automatically generated by a GitHub Actions workflow._
